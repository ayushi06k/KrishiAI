import { useState, useEffect } from "react";
import { FaUser, FaSignInAlt, FaCog, FaBell, FaChartLine, FaCloudSun, FaSeedling } from "react-icons/fa";
import { Card, CardContent } from "@/components/ui/card";
import { motion } from "framer-motion";
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from "recharts";

const data = [
  { name: "Apr", prediction: 100 },
  { name: "May", prediction: 300 },
  { name: "Jun", prediction: 600 },
  { name: "Jul", prediction: 400 },
  { name: "Aug", prediction: 700 },
  { name: "Sep", prediction: 500 },
  { name: "Oct", prediction: 800 },
  { name: "Nov", prediction: 600 },
  { name: "Dec", prediction: 900 }
];

export default function Dashboard() {
  const [sidebarOpen, setSidebarOpen] = useState(true);
  const [showNavbar, setShowNavbar] = useState(true);

  useEffect(() => {
    const handleScroll = () => {
      if (window.scrollY > 50) {
        setShowNavbar(false);
      } else {
        setShowNavbar(true);
      }
    };
    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  return (
    <div className="flex h-screen bg-gray-100">
      {/* Sidebar */}
      {sidebarOpen && (
        <aside className="w-64 bg-white p-4 shadow-lg fixed h-full">
          <h2 className="text-xl font-bold text-blue-500">Argon Dashboard</h2>
          <nav className="mt-4">
            <ul className="space-y-4">
              <li className="flex items-center text-gray-600 hover:text-blue-500 cursor-pointer"><FaChartLine className="mr-2" /> Yield Prediction</li>
              <li className="flex items-center text-gray-600 hover:text-blue-500 cursor-pointer"><FaCloudSun className="mr-2" /> Weather Prediction</li>
              <li className="flex items-center text-gray-600 hover:text-blue-500 cursor-pointer"><FaSeedling className="mr-2" /> Fertilizer Suggested</li>
              <li className="flex items-center text-gray-600 hover:text-blue-500 cursor-pointer"><FaUser className="mr-2" /> Profile</li>
              <li className="flex items-center text-gray-600 hover:text-blue-500 cursor-pointer"><FaSignInAlt className="mr-2" /> Sign In</li>
              <li className="flex items-center text-gray-600 hover:text-blue-500 cursor-pointer"><FaSignInAlt className="mr-2" /> Sign Up</li>
            </ul>
          </nav>
        </aside>
      )}

      {/* Main Content */}
      <main className="flex-1 p-6 ml-64">
        {/* Top Navigation */}
        {showNavbar && (
          <header className="fixed w-full flex justify-between items-center p-4 bg-blue-500 text-white shadow-md rounded-lg z-50">
            <input type="text" placeholder="Type here..." className="p-2 rounded-md text-black w-1/3" />
            <div className="flex space-x-4">
              <FaBell className="cursor-pointer" />
              <FaUser className="cursor-pointer" />
              <FaSignInAlt className="cursor-pointer" />
              <FaCog className="cursor-pointer" />
            </div>
          </header>
        )}

        <div className="pt-16">
          {/* Cards Section */}
          <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mt-6">
            {[{
              title: "Today's Prediction", value: "85%", change: "Accurate yield estimate", color: "text-green-500"
            }, {
              title: "Today's Soil N", value: "45 ppm", change: "Optimal nitrogen levels", color: "text-green-500"
            }, {
              title: "Today's Soil P", value: "30 ppm", change: "Phosphorus in range", color: "text-green-500"
            }, {
              title: "Today's Soil K", value: "50 ppm", change: "Potassium sufficient", color: "text-green-500"
            }].map((card, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, scale: 0.9 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ duration: 0.5, delay: index * 0.2 }}
              >
                <Card className="p-4 bg-white shadow-md rounded-lg">
                  <CardContent>
                    <h3 className="text-lg font-bold">{card.title}</h3>
                    <p className="text-2xl">{card.value}</p>
                    <span className={card.color}>{card.change}</span>
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </div>

          {/* Yield Prediction */}
          <div className="mt-6 p-6 bg-white shadow-md rounded-lg">
            <h3 className="text-xl font-bold">Yield Prediction</h3>
            <ResponsiveContainer width="100%" height={200}>
              <LineChart data={data}>
                <CartesianGrid strokeDasharray="3 3" />
                <XAxis dataKey="name" />
                <YAxis />
                <Tooltip />
                <Line type="monotone" dataKey="sales" stroke="#8884d8" strokeWidth={2} />
              </LineChart>
            </ResponsiveContainer>
          </div>

          {/* Fertilizer Suggestion Card */}
          <div className="mt-6 p-6 bg-white shadow-md rounded-lg">
            <h3 className="text-xl font-bold">Fertilizer Recommendation</h3>
            <p className="text-gray-600">Based on the NPK values, we suggest using a balanced fertilizer with an NPK ratio of 10-10-10 to maintain optimal soil health.</p>
          </div>
        </div>
      </main>
    </div>
  );
}
